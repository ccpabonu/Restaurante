/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.controlador_menup;
import modelo.Plato;
import modelo.Producto;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Graphics;
import java.awt.Image;
//import static javafx.scene.paint.Color.color;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import modelo.ArrayLinearList;

/**
 *
 * @author Asus
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     * @param container
     */
    /*
  public void enableComponents(Container container, boolean enable) {
    Component[] components = container.getComponents();
    for (Component component : components) {
        component.setEnabled(enable);
        if (component instanceof Container) {
            enableComponents((Container)component, enable);
        }
    }
}
    */
 
    Fondo fondo=new Fondo();
    MenuPrincipal ppal=new MenuPrincipal();
    
    public static ArrayLinearList <Plato> menu =new ArrayLinearList();// arreglo donde se van a guardar los datos de los platos
    
    
    public Menu() {
    this.setContentPane(fondo);
    initComponents();
    this.setLocationRelativeTo(null);
    controlador_menup ctlr_mp=new controlador_menup(ppal);
    ctlr_mp.iniciar();
    //ppal.setBackground(new Color (240,240,240,65));
    //enableComponents(contenedor, false);
    //contenedor.setBackground(new Color(0,0,0,0));
   
    

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contenedor = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout contenedorLayout = new javax.swing.GroupLayout(contenedor);
        contenedor.setLayout(contenedorLayout);
        contenedorLayout.setHorizontalGroup(
            contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 725, Short.MAX_VALUE)
        );
        contenedorLayout.setVerticalGroup(
            contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 498, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(contenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(contenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JPanel contenedor;
    // End of variables declaration//GEN-END:variables


class Fondo extends JPanel{
    
    private Image imagen;
    
    @Override
    public void paint(Graphics g){
        imagen=new ImageIcon(getClass().getResource("/imagenes/fondo.png")).getImage();
        g.drawImage(imagen, 0, 0,getWidth(), getHeight(), this);
        setOpaque(false);
        super.paint(g);   
    }
    
    
    
    
}
}
